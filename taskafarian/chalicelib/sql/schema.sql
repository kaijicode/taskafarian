
-- CREATE DATABASE taskafarian;
-- sudo -u postgres psql createdb taskafarian

-- BEGIN;

CREATE TABLE IF NOT EXISTS app_user (
    user_id bigint generated by default as identity primary key,
    username text unique not null,
    email text unique not null,
    password_hash text,
    first_name text,
    last_name text,
    created_at timestamptz default now(),
    updated_at timestamptz default now(),
    is_active bool default false
    -- last_log_in ?
    -- is_verified / is_active
);

-- user tokens
CREATE TABLE IF NOT EXISTS token (
    user_id bigint references app_user (user_id),
    token text not null ,
    expires_at timestamptz not null,

    primary key (user_id, token)
);


-- team is a group of users that work together
CREATE TABLE IF NOT EXISTS team (
    team_id bigint generated by default as identity primary key,
    name text not null,
    creator_id bigint references app_user (user_id) not null
);

-- role of a user in a team
-- roles: leader, member
CREATE TABLE IF NOT EXISTS team_role (
    role_name text primary key
);

-- many users can have many teams but can have only one role in each team
CREATE TABLE IF NOT EXISTS user_to_team (
    user_id bigint references app_user (user_id) ON DELETE CASCADE not null,
    team_id bigint references team (team_id) ON DELETE CASCADE not null,
    user_role text references team_role (role_name) not null,

    primary key (user_id, team_id)
);


-- project is a group of related tasks that might belong to a team or a user (=null)
CREATE TABLE IF NOT EXISTS project (
    project_id bigint generated by default as identity,
    team_id bigint references team (team_id),
    name text,

    primary key (project_id, team_id)
);


CREATE TABLE IF NOT EXISTS task_status (
    status text primary key
);

INSERT INTO task_status(status)
    VALUES ('todo'),
           ('in_progress'),
           ('cancelled'),
           ('completed'),
           ('archived'),
           ('on_hold')
;

-- task can be associated with many tags
CREATE TABLE IF NOT EXISTS task_tag (
    task_tag_id bigint generated by default as identity primary key,
    name text unique not null
);

CREATE TABLE IF NOT EXISTS task (
    task_id bigint generated by default as identity primary key,
    project_id bigint,
    team_id bigint,
    name text not null,
    description text default '',
    estimation interval,
    status text references task_status (status) not null,
    created_at timestamptz not null default now(),
    created_by bigint references app_user (user_id) not null,
    due_date timestamptz,
    assignee_id bigint references app_user(user_id),
    -- priority - minor, medium, high, critical

    FOREIGN KEY (project_id, team_id) REFERENCES project(project_id, team_id)
);


-- many tasks can have many tags
CREATE TABLE IF NOT EXISTS task_tag_to_task (
    task_tag_id bigint,
    task_id bigint,

    primary key (task_tag_id, task_id)
);

-- task time tracking
CREATE TABlE IF NOT EXISTS task_time_entry (
    time_entry_id bigint generated by default as identity primary key,
    task_id bigint references task (task_id) ON DELETE CASCADE not null,
    assignee_id bigint references app_user (user_id),
    start_datetime timestamptz default now() not null,
    end_datetime timestamptz,

    CHECK (start_datetime < end_datetime)
);

-- COMMIT;
